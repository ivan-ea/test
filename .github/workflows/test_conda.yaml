name: use conda in github

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab (github website)
  workflow_dispatch:
    inputs:
      pending_matrix:
        description: 'json encoded gh matrix of pending validations for new or updated resources (default: test on all resources)'
        required: true
        #default: '''{"include": [{"resource_id": "**", "version_id": "**"}]}'''
        default: '''{"include": [
		    {"resource_id": "10.5281/zenodo.5749843","version_id": "5888237"},
		    {"resource_id": "10.5281/zenodo.6338614","version_id": "6338615"},
		    {"resource_id": "10.5281/zenodo.6200635","version_id": "7702687"},
		    {"resource_id": "10.5281/zenodo.6200999","version_id": "7690494"},
		    {"resource_id": "10.5281/zenodo.6406756","version_id": "6811922"}]}'''
        type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  my-ci-job:
    runs-on: windows-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      # Check out another repositories
      - uses: actions/checkout@v3
        with:
          repository: ivan-ea/CI-deepimagej-bioimage-io
          ref: master
          path: CI-deepimagej-bioimage-io
      - uses: actions/checkout@v3
        with:
          repository: bioimage-io/collection-bioimage-io
          ref: gh-pages
          path: CI-deepimagej-bioimage-io/bioimageio-gh-pages
      - uses: actions/checkout@v3
        with:
          repository: ivan-ea/numpy-tiff-deepimagej
          ref: master
          path: CI-deepimagej-bioimage-io/numpy-tiff-deepimagej   

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world! ${{ inputs.pending_matrix }}

      - name: setup babashka
        uses: turtlequeue/setup-babashka@v1.5.0
        with:
          babashka-version: 1.1.173

      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: "3.10"

      - name: check conda install (default shell)
        working-directory: ./CI-deepimagej-bioimage-io/java_CI_scripts
        run: |
          conda env list
          conda info
          python --version

      - name: check conda install (pwsh)
        working-directory: ./CI-deepimagej-bioimage-io/java_CI_scripts
        shell: pwsh
        run: |
          conda env list
          conda info
          python --version

      - name: Setup fiji & deepimagej
        working-directory: ./CI-deepimagej-bioimage-io/java_CI_scripts
        run: |
          bb "(require '[reproduce.setup-fiji :as r]) (r/setup-fiji-&-deepimagej3)"

      - name: run initial stage
        working-directory: ./CI-deepimagej-bioimage-io/java_CI_scripts
        run: |
          bb --version
          bb "(require 'collection) (collection/generate-pending-matrix-from-collection true)" # update the collection to latest version
          echo "Models in generated Collection json"
          cat ./pending_matrix/only_collection.json
          bb -m core.main -j ./pending_matrix/lightweight_models.json download
          ls -R -l ../models

      - name: test shelling out from python in CMD
        working-directory: ./CI-deepimagej-bioimage-io/java_CI_scripts      
        shell: cmd /C CALL {0}
        run: |
          python ..\python_scripts\shelling_gh.py

      - name: check output of run
        working-directory: ./CI-deepimagej-bioimage-io/java_CI_scripts
        run: |
          # bb -m core.main reproduce
          ls -R -l ../models

      - name: test shelling out from python in PowerShell Core
        shell: pwsh
        run: |
          conda info
          conda list
          python ..\python_scripts\shelling_gh.py







      
