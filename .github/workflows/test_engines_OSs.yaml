# This is a basic workflow to help you get started with Actions

name: test different engines and OS's

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab (github website)
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  my-job:
    strategy:
      matrix:
        #os: [ubuntu-latest, windows-latest, macos-latest]
        os: [windows-latest, macos-latest]        
    runs-on: ${{ matrix.os }}

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      # Check out another repositories
      - uses: actions/checkout@v3
        with:
          repository: ivan-ea/CI-deepimagej-bioimage-io
          ref: master
          path: CI-deepimagej-bioimage-io
      - uses: actions/checkout@v3
        with:
          repository: bioimage-io/collection-bioimage-io
          ref: gh-pages
          path: CI-deepimagej-bioimage-io/bioimageio-gh-pages
      - uses: actions/checkout@v3
        with:
          repository: ivan-ea/numpy-tiff-deepimagej
          ref: master
          path: CI-deepimagej-bioimage-io/numpy-tiff-deepimagej          

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: See directory structure of the gh VM
        run: |
          java -version
          pwd
          ls
          echo "--"
          ls CI-deepimagej-bioimage-io
          echo "--"
          ls $GITHUB_WORKSPACE | tee output.txt
          echo "--"
          echo ~
          echo "--"
          echo $HOME
      - name: Checking that previous output still there
        run: |
          ls
          cat output.txt

      # - name: Fake Fiji Setup
      #   run: |
      #     mkdir -p ~/blank_fiji/Fiji.app
      #     touch ~/blank_fiji/Fiji.app/ImageJ-linux64
      #     touch resources/models_to_test.txt

      - name: setup babashka
        uses: turtlequeue/setup-babashka@v1.5.0
        with:
          babashka-version: 1.1.173

      - name: run scripts for tests
        working-directory: ./CI-deepimagej-bioimage-io/java_CI_scripts
        run: |
          bb --version
          bb ../../scripts/info.clj
          bb -m core.main -h
          bb -m core.main -u # run all unit tests
          bb "(require '[core.cli-test]) (clojure.test/run-tests 'core.cli-test)" # run core unit tests
          bb -m core.main -j pending_matrix/variety_models.json init
          ls -R ../models

      - name: check that initial pipeline of CI went OK
        working-directory: ./CI-deepimagej-bioimage-io/
        run: |
          chmod +x ./bash_scripts/check_initial_CI.sh
          bash ./bash_scripts/check_initial_CI.sh

      - name: check the commands that will be run for reproduction
        working-directory: ./CI-deepimagej-bioimage-io/java_CI_scripts
        run: |
          bb "(require '[config :refer [CONSTANTS]])(println (:fiji-executable CONSTANTS) (fs/exists? (:fiji-executable CONSTANTS)))"
          bb "(require '[reproduce.run-fiji-scripts :as r]) (r/build-bash-script)"
          head -n 30 ../resources/test_the_models.sh          

      # Download and Reproduce

      - name: run download pipeline
        working-directory: ./CI-deepimagej-bioimage-io/java_CI_scripts
        run: |
          bb -m core.main -j pending_matrix/different_engines.json download
          bb "(require '[reproduce.setup-fiji :as r]) (r/setup-fiji-&-deepimagej)"
          bb "(require '[config :refer [CONSTANTS]])(println (:fiji-executable CONSTANTS) (fs/exists? (:fiji-executable CONSTANTS)))"
          ls -R ../models
          
      - name: run reproduce pipeline
        working-directory: ./CI-deepimagej-bioimage-io/java_CI_scripts
        run: |
          #~/blank_fiji/Fiji.app/ImageJ-* --headless --console --ij2 --run ./src/reproduce/test_many_with_deepimagej.clj
          # TODO run this command with proper executable name and paths from the CI (using bb.process?:)
          ls -R ../models
          echo "Now not all models in a row"
          bb -m core.main reproduce
          ls -R ../models

      - name: print contents of log (error)
        working-directory: ./CI-deepimagej-bioimage-io/java_CI_scripts
        run: |
          cat ..\test_summaries\fiji_log_err.txt      
